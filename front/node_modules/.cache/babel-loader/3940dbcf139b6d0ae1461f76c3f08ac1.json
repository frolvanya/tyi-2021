{"ast":null,"code":"var _jsxFileName = \"/Users/frol/Documents/Scripts/TYI-2021/front/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const canvas = useRef();\n  let ctx = null;\n\n  const drawFillRect = (info, style = {}) => {\n    const {\n      x,\n      y,\n      w,\n      h\n    } = info;\n    const {\n      backgroundColor = 'black'\n    } = style;\n    ctx.beginPath();\n    ctx.fillStyle = backgroundColor;\n    ctx.fillRect(x, y, w, h);\n  };\n\n  useEffect(() => {\n    const canvasEle = canvas.current;\n    canvasEle.width = 600;\n    canvasEle.height = 600;\n    ctx = canvasEle.getContext(\"2d\");\n  }, []);\n  useEffect(() => {\n    const r3Info = {\n      x: 250,\n      y: 80,\n      w: 80,\n      h: 120\n    };\n    drawFillRect(r3Info, {\n      backgroundColor: 'green'\n    });\n    const r4Info = {\n      x: 200,\n      y: 220,\n      w: 100,\n      h: 50\n    };\n    drawFillRect(r4Info);\n  }, []); // draw rectangle\n\n  const drawRect = (info, style = {}) => {\n    const {\n      x,\n      y,\n      w,\n      h\n    } = info;\n    const {\n      borderColor = 'black',\n      borderWidth = 1\n    } = style;\n    ctx.beginPath();\n    ctx.strokeStyle = borderColor;\n    ctx.lineWidth = borderWidth;\n    ctx.rect(x, y, w, h);\n    ctx.stroke();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvas\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"Uf3A04Dxr7BWd2F1n+LTI5nEQDU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/frol/Documents/Scripts/TYI-2021/front/src/App.js"],"names":["React","useRef","useEffect","App","canvas","ctx","drawFillRect","info","style","x","y","w","h","backgroundColor","beginPath","fillStyle","fillRect","canvasEle","current","width","height","getContext","r3Info","r4Info","drawRect","borderColor","borderWidth","strokeStyle","lineWidth","rect","stroke"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACd,QAAMC,MAAM,GAAGH,MAAM,EAArB;AACA,MAAII,GAAG,GAAG,IAAV;;AAEA,QAAMC,YAAY,GAAG,CAACC,IAAD,EAAOC,KAAK,GAAG,EAAf,KAAsB;AAC1C,UAAM;AAAEC,MAAAA,CAAF;AAAKC,MAAAA,CAAL;AAAQC,MAAAA,CAAR;AAAWC,MAAAA;AAAX,QAAiBL,IAAvB;AACA,UAAM;AAAEM,MAAAA,eAAe,GAAG;AAApB,QAAgCL,KAAtC;AAEAH,IAAAA,GAAG,CAACS,SAAJ;AACAT,IAAAA,GAAG,CAACU,SAAJ,GAAgBF,eAAhB;AACAR,IAAAA,GAAG,CAACW,QAAJ,CAAaP,CAAb,EAAgBC,CAAhB,EAAmBC,CAAnB,EAAsBC,CAAtB;AACA,GAPD;;AASAV,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMe,SAAS,GAAGb,MAAM,CAACc,OAAzB;AACAD,IAAAA,SAAS,CAACE,KAAV,GAAkB,GAAlB;AACAF,IAAAA,SAAS,CAACG,MAAV,GAAmB,GAAnB;AAEAf,IAAAA,GAAG,GAAGY,SAAS,CAACI,UAAV,CAAqB,IAArB,CAAN;AACA,GANQ,EAMN,EANM,CAAT;AAQAnB,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMoB,MAAM,GAAG;AAAEb,MAAAA,CAAC,EAAE,GAAL;AAAUC,MAAAA,CAAC,EAAE,EAAb;AAAiBC,MAAAA,CAAC,EAAE,EAApB;AAAwBC,MAAAA,CAAC,EAAE;AAA3B,KAAf;AACAN,IAAAA,YAAY,CAACgB,MAAD,EAAS;AAAET,MAAAA,eAAe,EAAE;AAAnB,KAAT,CAAZ;AAEA,UAAMU,MAAM,GAAG;AAAEd,MAAAA,CAAC,EAAE,GAAL;AAAUC,MAAAA,CAAC,EAAE,GAAb;AAAkBC,MAAAA,CAAC,EAAE,GAArB;AAA0BC,MAAAA,CAAC,EAAE;AAA7B,KAAf;AACAN,IAAAA,YAAY,CAACiB,MAAD,CAAZ;AACA,GANQ,EAMN,EANM,CAAT,CArBc,CA6Bd;;AACA,QAAMC,QAAQ,GAAG,CAACjB,IAAD,EAAOC,KAAK,GAAG,EAAf,KAAsB;AACtC,UAAM;AAAEC,MAAAA,CAAF;AAAKC,MAAAA,CAAL;AAAQC,MAAAA,CAAR;AAAWC,MAAAA;AAAX,QAAiBL,IAAvB;AACA,UAAM;AAAEkB,MAAAA,WAAW,GAAG,OAAhB;AAAyBC,MAAAA,WAAW,GAAG;AAAvC,QAA6ClB,KAAnD;AAEAH,IAAAA,GAAG,CAACS,SAAJ;AACAT,IAAAA,GAAG,CAACsB,WAAJ,GAAkBF,WAAlB;AACApB,IAAAA,GAAG,CAACuB,SAAJ,GAAgBF,WAAhB;AACArB,IAAAA,GAAG,CAACwB,IAAJ,CAASpB,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB;AACAP,IAAAA,GAAG,CAACyB,MAAJ;AACA,GATD;;AAWA,sBACC;AAAQ,IAAA,GAAG,EAAE1B;AAAb;AAAA;AAAA;AAAA;AAAA,UADD;AAGA;;GA5CQD,G;;KAAAA,G;AA8CT,eAAeA,GAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nfunction App() {\n\tconst canvas = useRef();\n\tlet ctx = null;\n\n\tconst drawFillRect = (info, style = {}) => {\n\t\tconst { x, y, w, h } = info;\n\t\tconst { backgroundColor = 'black' } = style;\n\n\t\tctx.beginPath();\n\t\tctx.fillStyle = backgroundColor;\n\t\tctx.fillRect(x, y, w, h);\n\t}\n\n\tuseEffect(() => {\n\t\tconst canvasEle = canvas.current;\n\t\tcanvasEle.width = 600;\n\t\tcanvasEle.height = 600;\n\n\t\tctx = canvasEle.getContext(\"2d\");\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst r3Info = { x: 250, y: 80, w: 80, h: 120 };\n\t\tdrawFillRect(r3Info, { backgroundColor: 'green' });\n\n\t\tconst r4Info = { x: 200, y: 220, w: 100, h: 50 };\n\t\tdrawFillRect(r4Info);\n\t}, []);\n\n\t// draw rectangle\n\tconst drawRect = (info, style = {}) => {\n\t\tconst { x, y, w, h } = info;\n\t\tconst { borderColor = 'black', borderWidth = 1 } = style;\n\n\t\tctx.beginPath();\n\t\tctx.strokeStyle = borderColor;\n\t\tctx.lineWidth = borderWidth;\n\t\tctx.rect(x, y, w, h);\n\t\tctx.stroke();\n\t}\n\n\treturn (\n\t\t<canvas ref={canvas}></canvas>\n\t);\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}